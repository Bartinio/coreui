{"version":3,"sources":["../../src/utilities/get-style.js"],"names":["getCssCustomProperties","cssCustomProperties","stylesheets","Map","Object","entries","document","styleSheets","forEach","stylesheet","rules","cssRules","rule","selectorText","style","cssText","split","property","name","value","isIE11","Boolean","window","MSInputMethodContext","documentMode","isCustomProperty","match","getStyle","element","body","getComputedStyle","getPropertyValue","replace"],"mappings":"AAAA;;;;;;;AAOA;AACA,IAAMA,yBAAyB,SAAzBA,sBAAyB,GAAM;AACnC,MAAMC,sBAAsB,EAA5B;AACA,MAAMC,cAAc,IAAIC,GAAJ,CAAQC,OAAOC,OAAP,CAAeC,SAASC,WAAxB,CAAR,CAApB;AACAL,cAAYM,OAAZ,CAAoB,UAACC,UAAD,EAAgB;AAClC,QAAMC,QAAQ,IAAIP,GAAJ,CAAQC,OAAOC,OAAP,CAAeI,WAAWE,QAA1B,CAAR,CAAd;AACAD,UAAMF,OAAN,CAAc,UAACI,IAAD,EAAU;AACtB,UAAIA,KAAKC,YAAL,KAAsB,uBAA1B,EAAmD;AACjDD,aAAKE,KAAL,CAAWC,OAAX,CAAmBC,KAAnB,CAAyB,IAAzB,EAA+BR,OAA/B,CAAuC,UAACS,QAAD,EAAc;AACnD,cAAMC,OAAOD,SAASD,KAAT,CAAe,IAAf,EAAqB,CAArB,CAAb;AACA,cAAMG,QAAQF,SAASD,KAAT,CAAe,IAAf,EAAqB,CAArB,CAAd;AACAf,qCAAyBiB,IAAzB,IAAmCC,KAAnC;AACD,SAJD;AAKD;AACF,KARD;AASD,GAXD;AAYA,SAAOlB,mBAAP;AACD,CAhBD;;AAkBA,IAAMmB,SAAS,SAATA,MAAS;AAAA,SAAMC,QAAQC,OAAOC,oBAAf,KAAwCF,QAAQf,SAASkB,YAAjB,CAA9C;AAAA,CAAf;;AACA,IAAMC,mBAAmB,SAAnBA,gBAAmB,CAACR,QAAD;AAAA,SAAcA,SAASS,KAAT,CAAe,QAAf,CAAd;AAAA,CAAzB;;AAEA,IAAMC,WAAW,SAAXA,QAAW,CAACV,QAAD,EAAWW,OAAX;AAAA,MAAWA,OAAX;AAAWA,WAAX,GAAqBtB,SAASuB,IAA9B;AAAA;;AAAA,SAAuCP,OAAOQ,gBAAP,CAAwBF,OAAxB,EAAiC,IAAjC,EAAuCG,gBAAvC,CAAwDd,QAAxD,EAAkEe,OAAlE,CAA0E,KAA1E,EAAiF,EAAjF,CAAvC;AAAA,CAAjB","sourcesContent":["/**\n * --------------------------------------------------------------------------\n * CoreUI Utilities (v2.0.0-beta.10): get-style.js\n * Licensed under MIT (https://coreui.io/license)\n * --------------------------------------------------------------------------\n */\n\n/* eslint-disable no-unused-vars */\nconst getCssCustomProperties = () => {\n  const cssCustomProperties = {}\n  const stylesheets = new Map(Object.entries(document.styleSheets))\n  stylesheets.forEach((stylesheet) => {\n    const rules = new Map(Object.entries(stylesheet.cssRules))\n    rules.forEach((rule) => {\n      if (rule.selectorText === '.ie-custom-properties') {\n        rule.style.cssText.split('; ').forEach((property) => {\n          const name = property.split(': ')[0]\n          const value = property.split(': ')[1]\n          cssCustomProperties[`--${name}`] = value\n        })\n      }\n    })\n  })\n  return cssCustomProperties\n}\n\nconst isIE11 = () => Boolean(window.MSInputMethodContext) && Boolean(document.documentMode)\nconst isCustomProperty = (property) => property.match(/^--.*/i)\n\nconst getStyle = (property, element = document.body) => window.getComputedStyle(element, null).getPropertyValue(property).replace(/^\\s/, '')\n\nexport default getStyle\n"],"file":"get-style.js"}