{"version":3,"sources":["../../src/utilities/get-style.js"],"names":["getCssCustomProperties","cssCustomProperties","stylesheets","Map","Object","entries","document","styleSheets","forEach","stylesheet","console","log","property","rules","cssRules","rule","selectorText","style","cssText","split","name","value","isIE11","Boolean","window","MSInputMethodContext","documentMode","isCustomProperty","match","getStyle","element","body","getComputedStyle","getPropertyValue","replace","obj","ownProps","keys","i","length","resArray","Array"],"mappings":"AAAA;;;;;;;AAOA;AACA,IAAMA,yBAAyB,SAAzBA,sBAAyB,GAAM;AACnC,MAAMC,sBAAsB,EAA5B;AACA,MAAMC,cAAc,IAAIC,GAAJ,CAAQC,OAAOC,OAAP,CAAeC,SAASC,WAAxB,CAAR,CAApB;AACAL,cAAYM,OAAZ,CAAoB,UAACC,UAAD,EAAgB;AAClCC,YAAQC,GAAR,CAAYC,QAAZ;AACA,QAAMC,QAAQ,IAAIV,GAAJ,CAAQC,OAAOC,OAAP,CAAeI,WAAWK,QAA1B,CAAR,CAAd;AACAD,UAAML,OAAN,CAAc,UAACO,IAAD,EAAU;AACtB,UAAIA,KAAKC,YAAL,KAAsB,uBAA1B,EAAmD;AACjDD,aAAKE,KAAL,CAAWC,OAAX,CAAmBC,KAAnB,CAAyB,IAAzB,EAA+BX,OAA/B,CAAuC,UAACI,QAAD,EAAc;AACnDF,kBAAQC,GAAR,CAAYC,QAAZ;AACA,cAAMQ,OAAOR,SAASO,KAAT,CAAe,IAAf,EAAqB,CAArB,CAAb;AACA,cAAME,QAAQT,SAASO,KAAT,CAAe,IAAf,EAAqB,CAArB,CAAd;AACAlB,qCAAyBmB,IAAzB,IAAmCC,KAAnC;AACD,SALD;AAMD;AACF,KATD;AAUD,GAbD;AAcA,SAAOpB,mBAAP;AACD,CAlBD;;AAoBA,IAAMqB,SAAS,SAATA,MAAS;AAAA,SAAMC,QAAQC,OAAOC,oBAAf,KAAwCF,QAAQjB,SAASoB,YAAjB,CAA9C;AAAA,CAAf;;AACA,IAAMC,mBAAmB,SAAnBA,gBAAmB,CAACf,QAAD;AAAA,SAAcA,SAASgB,KAAT,CAAe,QAAf,CAAd;AAAA,CAAzB;;AAEA,IAAMC,WAAW,SAAXA,QAAW,CAACjB,QAAD,EAAWkB,OAAX,EAAuC;AAAA,MAA5BA,OAA4B;AAA5BA,WAA4B,GAAlBxB,SAASyB,IAAS;AAAA;;AACtD,MAAId,KAAJ;;AACA,MAAIU,iBAAiBf,QAAjB,KAA8BU,QAAlC,EAA4C;AAC1C,QAAMrB,sBAAsBD,wBAA5B;AACAiB,YAAQhB,oBAAoBW,QAApB,CAAR,CAF0C,CAG1C;AACD,GAJD,MAIO;AACLK,YAAQO,OAAOQ,gBAAP,CAAwBF,OAAxB,EAAiC,IAAjC,EAAuCG,gBAAvC,CAAwDrB,QAAxD,EAAkEsB,OAAlE,CAA0E,KAA1E,EAAiF,EAAjF,CAAR;AACD,GARqD,CAStD;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAOjB,KAAP;AACD,CAhBD;;AAkBA,IAAI,CAACb,OAAOC,OAAZ,EACAD,OAAOC,OAAP,GAAiB,UAAS8B,GAAT,EAAa;AAC5B,MAAIC,WAAWhC,OAAOiC,IAAP,CAAYF,GAAZ,CAAf;AAAA,MACAG,IAAIF,SAASG,MADb;AAAA,MAEAC,WAAW,IAAIC,KAAJ,CAAUH,CAAV,CAFX,CAD4B,CAGH;;AACzB,SAAOA,GAAP;AACAE,aAASF,CAAT,IAAc,CAACF,SAASE,CAAT,CAAD,EAAcH,IAAIC,SAASE,CAAT,CAAJ,CAAd,CAAd;AADA;;AAGA,SAAOE,QAAP;AACD,CARD","sourcesContent":["/**\n * --------------------------------------------------------------------------\n * CoreUI Utilities (v2.0.0-beta.10): get-style.js\n * Licensed under MIT (https://coreui.io/license)\n * --------------------------------------------------------------------------\n */\n\n/* eslint-disable */\nconst getCssCustomProperties = () => {\n  const cssCustomProperties = {}\n  const stylesheets = new Map(Object.entries(document.styleSheets))\n  stylesheets.forEach((stylesheet) => {\n    console.log(property)\n    const rules = new Map(Object.entries(stylesheet.cssRules))\n    rules.forEach((rule) => {\n      if (rule.selectorText === '.ie-custom-properties') {\n        rule.style.cssText.split('; ').forEach((property) => {\n          console.log(property)\n          const name = property.split(': ')[0]\n          const value = property.split(': ')[1]\n          cssCustomProperties[`--${name}`] = value\n        })\n      }\n    })\n  })\n  return cssCustomProperties\n}\n\nconst isIE11 = () => Boolean(window.MSInputMethodContext) && Boolean(document.documentMode)\nconst isCustomProperty = (property) => property.match(/^--.*/i)\n\nconst getStyle = (property, element = document.body) => {\n  let style\n  if (isCustomProperty(property) && isIE11()) {\n    const cssCustomProperties = getCssCustomProperties()\n    style = cssCustomProperties[property]\n    // console.log(cssCustomProperties)\n  } else {\n    style = window.getComputedStyle(element, null).getPropertyValue(property).replace(/^\\s/, '')\n  }\n  // eslint-disable-next-line no-console\n  // console.log(isIE11())\n  // eslint-disable-next-line no-console\n  // console.log(property)\n  // eslint-disable-next-line no-console\n  // console.log(isCustomProperty(property))\n  return style\n}\n\nif (!Object.entries)\nObject.entries = function(obj){\n  var ownProps = Object.keys(obj),\n  i = ownProps.length,\n  resArray = new Array(i); // preallocate the Array\n  while (i--)\n  resArray[i] = [ownProps[i], obj[ownProps[i]]]\n\n  return resArray\n};\n\nexport default getStyle\n"],"file":"get-style.js"}